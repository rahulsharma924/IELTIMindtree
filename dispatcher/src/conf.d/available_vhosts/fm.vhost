#
# This is the default publish virtualhost definition for Apache. 
#
# DO NOT EDIT this file, your changes will have no impact on your deployment.
#
# Instead create a copy in the folder conf.d/available_vhosts and edit the copy.
# Finally, change to the directory conf.d/enabled_vhosts, remove the symbolic
# link for default.vhost and create a symbolic link to your copy.
#

# Include customer defined variables
Include conf.d/variables/custom.vars

<VirtualHost *:80>
	ServerName	"fm_publish"
	# Put names of which domains are used for your published site/content here
	ServerAlias  uat-dt.fairviewmicrowave.com publish-p78402-e720520.adobeaemcloud.com publish-p78402-e720618.adobeaemcloud.com qa-dt.fairviewmicrowave.com publish-p78402-e910888.adobeaemcloud.com stage.fairviewmicrowave.com publish-p78402-e680778.adobeaemcloud.com publish-p78402-e955507.adobeaemcloud.com publish-p78402-e940024.adobeaemcloud.com "127.0.0.1" "localhost" ".local" ".adobeaemcloud.com" "*.adobeaemcloud.net"
	# Use a document root that matches the one in conf.dispatcher.d/default.farm
	DocumentRoot "${DOCROOT}"
	ErrorDocument 404 /content/fm/en/page-not-found.html
	ErrorDocument 500 /content/fm/en/500.html
    ErrorDocument 403 /content/fm/en/403.html
	# URI dereferencing algorithm is applied at Sling's level, do not decode parameters here
	AllowEncodedSlashes NoDecode
	# Add header breadcrumbs for help in troubleshooting
	<IfModule mod_headers.c>
		Header add X-Vhost "publish"
	</IfModule>
	<Directory />
		<IfModule disp_apache2.c>
			# Some items cache with the wrong mime type
			# Use this option to use the name to auto-detect mime types when cached improperly
			ModMimeUsePathInfo On
			# Use this option to avoid cache poisioning
			# Sling will return /content/image.jpg as well as /content/image.jpg/ but apache can't search /content/image.jpg/ as a file
			# Apache will treat that like a directory.  This assures the last slash is never stored in cache
			DirectorySlash Off
			# Enable the dispatcher file handler for apache to fetch files from AEM
			SetHandler dispatcher-handler
		</IfModule>
		Options FollowSymLinks
		AllowOverride None
		# Insert filter
		SetOutputFilter DEFLATE
		# Don't compress images
		SetEnvIfNoCase Request_URI \.(?:gif|jpe?g|png)$ no-gzip dont-vary
		# Prevent clickjacking
		Header always append X-Frame-Options SAMEORIGIN
	</Directory>
	<Directory "${DOCROOT}">
		AllowOverride None
		Require all granted
	</Directory>
	<IfModule disp_apache2.c>
		# Enabled to allow rewrites to take affect and not be ignored by the dispatcher module
		DispatcherUseProcessedURL	On
		# Default setting to allow all errors to come from the aem instance
		DispatcherPassError		1
	</IfModule>
	<IfModule mod_rewrite.c>
		RewriteEngine	on
		#Include conf.d/rewrites/rewrite.rules		
		RewriteRule ^/sitemap-product.xml /content/sitemap-product.xml [PT,L]
		# Rewrite index page internally, pass through (PT)		
		RewriteCond %{REQUEST_URI} ^/robots.txt$
		RewriteRule (.*) /content/fm/robots.txt [PT,L]
		RewriteCond %{REQUEST_URI} ^/siteaudit-ZGY4NGU5ZT.txt$
		RewriteRule (.*) /content/fm/siteaudit-ZGY4NGU5ZT.txt [PT,L]		
		
		#Redirect home page request to root page
		RewriteCond %{REQUEST_URI} ^/homepage.html		
		RewriteRule ^/ https://%{HTTP_HOST} [L,R=301]

		# GS #
		       
		RewriteCond %{REQUEST_URI} !^/content/fm/en
        RewriteCond %{REQUEST_URI} !^/content/dam
        RewriteCond %{HTTP_USER_AGENT} ^.*(?i)(Googlebot|Bingbot|Slurp|Screaming).*$
		RewriteRule ^\/useragenttesting.html$ /content/fm/en/googlebot-user-agent.html [PT,L]
		RewriteCond %{REQUEST_URI} !^/content/fm/en
        RewriteCond %{REQUEST_URI} !^/content/dam
        RewriteCond %{HTTP_USER_AGENT} ^.*(?i)(Mozilla).*$
        RewriteRule ^\/useragenttesting.html$ /content/fm/en/mozilla-user-agent.html [PT,L]

		        # product page URL handling
		        RewriteCond %{REQUEST_URI} !^/content/fm/en
		        RewriteCond %{REQUEST_URI} !^/content/dam                
                RewriteRule ^\/product\/(.*)[\/](.*).html /content/fm/en/pdppage.$2.html [PT,L]

                # category page URL handling
                RewriteCond %{REQUEST_URI} !^/content/fm/en
				RewriteCond %{REQUEST_URI} !^/content/dam
                RewriteCond %{HTTP_USER_AGENT} ^.*(?i)(Googlebot|Bingbot|Slurp|Screaming).*$              
                RewriteRule ^\/category[\/]([a-zA-Z0-9-]+).html$ /content/fm/en/plp-bot-page.$1.html [PT,L]

                RewriteCond %{REQUEST_URI} !^/content/fm/en
                RewriteCond %{REQUEST_URI} !^/content/dam
                RewriteCond %{HTTP_USER_AGENT} ^.*(?i)(Googlebot|Bingbot|Slurp|Screaming).*$
                RewriteRule ^\/category[\/](.*)[\/]([^\/]+).html$ /content/fm/en/plp-bot-page.$2.html [PT,L]

                RewriteCond %{REQUEST_URI} !^/content/fm/en
                RewriteCond %{REQUEST_URI} !^/content/dam
                RewriteCond %{HTTP_USER_AGENT} ^.*(?i)(Googlebot|Bingbot|Slurp|Screaming).*$
                RewriteRule ^\/category[\/](.*)[\/](.*)[\/]([^\/]+).html$ /content/fm/en/plp-bot-page.$3.html [PT,L]

                RewriteCond %{REQUEST_URI} !^/content/fm/en
                RewriteCond %{REQUEST_URI} !^/content/dam
                RewriteCond %{HTTP_USER_AGENT} ^.*(?i)(Mozilla).*$                
                RewriteRule ^\/category[\/]([a-zA-Z0-9-]+).html$ /content/fm/en/plp-page.$1.html [PT,L]

                RewriteCond %{REQUEST_URI} !^/content/fm/en
                RewriteCond %{REQUEST_URI} !^/content/dam
                RewriteCond %{HTTP_USER_AGENT} ^.*(?i)(Mozilla).*$
                RewriteRule ^\/category[\/](.*)[\/]([^\/]+).html$ /content/fm/en/plp-page.$2.html [PT,L]

                RewriteCond %{REQUEST_URI} !^/content/fm/en               
                RewriteCond %{HTTP_USER_AGENT} ^.*(?i)(Mozilla).*$
                RewriteRule ^\/category[\/](.*)[\/](.*)[\/]([^\/]+).html$ /content/fm/en/plp-page.$3.html [PT,L]

                RewriteCond %{REQUEST_URI} !\.(?:css|js|jpe?g|gif|png|json|xml|svg|original)$ [NC]
                RewriteRule ^/$ /content/fm/en/homepage.html [PT,NC]

		    # Custom Rewrite for shortening the content paths
                        RewriteCond %{REQUEST_URI} !\.(?:css|js|jpe?g|gif|json|xml|pdf|txt|xlsx?|docx?|pptx?|svg|bmp|mp3|avi|swf|original)$ [NC]
                        RewriteCond %{REQUEST_URI} !^/etc/
                        RewriteCond %{REQUEST_URI} !^/etc.clientlibs/
                        RewriteCond %{REQUEST_URI} !^/bin/
                        RewriteCond %{REQUEST_URI} !^/dam/
                        RewriteCond %{REQUEST_URI} !^/mobile/
                        RewriteCond %{REQUEST_URI} !^/content/dam
                        RewriteCond %{REQUEST_URI} !^/content/fm/en
						RewriteCond %{REQUEST_URI} !^/content/fm                        
                        RewriteRule ^/(.*)$ /content/fm/en/$1 [PT,L]						
						RewriteRule ^(.+\.xml?)$ /content/fm/$1 [PT,NC,L]
													

	</IfModule>

	 <IfModule mod_headers.c>
            # Serve gzip compressed CSS and JS files if they exist
			# and the client accepts gzip.
			RewriteCond "%{HTTP:Accept-encoding}" "gzip"
			RewriteCond "%{REQUEST_FILENAME}\.gz" -s
			RewriteRule "^(.*)\.(css|js)"         "$1\.$2\.gz" [QSA]
			# Serve correct content types, and prevent mod_deflate double gzip.
			RewriteRule "\.css\.gz$" "-" [T=text/css,E=no-gzip:1]
			RewriteRule "\.js\.gz$"  "-" [T=text/javascript,E=no-gzip:1]

		<FilesMatch "(\.js\.gz|\.css\.gz)$">
			# Serve correct encoding type.
			Header append Content-Encoding gzip

			# Force proxies to cache gzipped &
			# non-gzipped css/js files separately.
			Header append Vary Accept-Encoding
		</FilesMatch> 
			  # Cache mutable ttf library resources for 12h and background refresh after 12h.
              <LocationMatch "/content/fm.theme/_default/resources/.*\.(?i:json|ttf|png|jpe?g|svg)$">
                Header set Cache-Control "max-age=43200,stale-while-revalidate=43200,stale-if-error=43200,public"
                Header set Age 0
              </LocationMatch>
	 
	 	      # Cache mutable client library resources for 12h and background refresh after 12h.
              <LocationMatch "^/etc\.clientlibs/.*\.(?i:json|png|gif|jpe?g|svg)$">
                Header set Cache-Control "max-age=43200,stale-while-revalidate=43200,stale-if-error=43200,public"
		#Header always set Surrogate-Control "stale-while-revalidate=43200,stale-if-error=43200" "expr=%{REQUEST_STATUS} < 400"
                Header set Age 0
              </LocationMatch>

              # Cache immutable client library resources long-term (30 days) with background refresh to avoid MISS
              <LocationMatch "^/etc\.clientlibs/.*\.(?i:js|css|ttf|woff2)$">
                Header set Cache-Control "max-age=2592000,stale-while-revalidate=43200,stale-if-error=43200,public,immutable"
                Header set Age 0
              </LocationMatch>

              # Core Component Image Component: long-term caching (30 days) for immutable URLs, background refresh to avoid MISS
              <LocationMatch "^/content/.*\.coreimg.*\.(?i:jpe?g|png|gif|svg)$">
                 Header set Cache-Control "max-age=2592000,stale-while-revalidate=43200,stale-if-error=43200,public,immutable" "expr=%{REQUEST_STATUS} < 400"
                 Header set Age 0
              </LocationMatch>
  	
             		  		    			  
              <LocationMatch "^/content/.*\.html$">
                 Header unset Cache-Control
                 Header always set Cache-Control "max-age=86400,s-maxage=300,stale-while-revalidate=3600" "expr=%{REQUEST_STATUS} < 400"
                 Header always set Surrogate-Control "stale-while-revalidate=43200,stale-if-error=43200" "expr=%{REQUEST_STATUS} < 400"
                 Header set Age 0
				Header set Set-Cookie "soft-launch-view=new; Max-Age=2592000; Path=/"
              </LocationMatch>	
         	 	  

              # Cache mutable resources from the DAM like images and video for 24h and background refresh after 12h to avoid MISS
              <LocationMatch "^/content/dam/.*\.(?i:jpe?g|gif|js|mov|mp4|png|svg|txt|zip|ico|webp|pdf)$">
                 Header set Cache-Control "max-age=43200,stale-while-revalidate=43200,stale-if-error=43200" "expr=%{REQUEST_STATUS} < 400"
                 Header set Age 0
              </LocationMatch>

              # JSON in DAM: CDN cache for 10 min with background refresh to avoid MISS
              <LocationMatch "^/content/dam/.*\.(?i:json)$">

                Header always set Cache-Control "max-age=600,stale-while-revalidate=3600,stale-if-error=3600" "expr=%{REQUEST_STATUS} < 400"
                Header set Age 0
              </LocationMatch>
			  <LocationMatch "^\/content\/dam/infinite-electronics/download-pdfs/.*\.(?i:pdf)$">
				ForceType application/pdf
				Header set Content-Disposition attachment
				</LocationMatch>
				<LocationMatch "^\/content\/dam/infinite-electronics/product-assets/fairview-microwave/.*\.(?i:pdf)$">
				ForceType application/pdf
				Header set Content-Disposition inline
				</LocationMatch>
					  
			  <LocationMatch "\.(?i:xml)$">
                ForceType application/xml
                Header set Content-Disposition inline
              </LocationMatch>
			  
			  <LocationMatch "\.(?i:png)$">
                ForceType application/png
                Header set Content-Disposition inline
			  </LocationMatch>
			  <LocationMatch "\.(?i:PNG)$">
                ForceType application/PNG
                Header set Content-Disposition inline
			  </LocationMatch>
			  <LocationMatch "\.(?i:jpg)$">
                ForceType application/jpg
                Header set Content-Disposition inline
			  </LocationMatch>
			  <LocationMatch "\.(?i:JPG)$">
                ForceType application/JPG
                Header set Content-Disposition inline
			  </LocationMatch>
			  <LocationMatch "\.(?i:jpeg)$">
                ForceType application/jpeg
                Header set Content-Disposition inline
			  </LocationMatch>
			  <LocationMatch "\.(?i:JPEG)$">
                ForceType application/JPEG
                Header set Content-Disposition inline
			  </LocationMatch>
			  <LocationMatch "\.(?i:gif)$">
                ForceType application/gif
                Header set Content-Disposition inline
			  </LocationMatch>
			  <LocationMatch "\.(?i:GIF)$">
                ForceType application/GIF
                Header set Content-Disposition inline
			  </LocationMatch>
			  <LocationMatch "\.(?i:txt)$">
                ForceType application/txt
                Header set Content-Disposition inline
			  </LocationMatch>
			  			  
            </IfModule>
</VirtualHost>
